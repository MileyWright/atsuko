[{"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Apparel\\Apparel.js":"1","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\index.js":"2","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Home\\Home.js":"3","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Nav\\Dropdown.js":"4","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Nav\\Nav.js":"5","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\index.js":"6","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\App.js":"7","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Footer\\Footer.js":"8","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\seed.js":"9","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Products\\Card.js":"10","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Products\\ProductPage.js":"11","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\Constants\\Routes.js":"12","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\lib\\commerce.js":"13","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Products\\ModalData.js":"14"},{"size":8119,"mtime":1614831279306,"results":"15","hashOfConfig":"16"},{"size":323,"mtime":1609648666001,"results":"17","hashOfConfig":"16"},{"size":8574,"mtime":1609616588523,"results":"18","hashOfConfig":"16"},{"size":4241,"mtime":1609615842552,"results":"19","hashOfConfig":"16"},{"size":2270,"mtime":1614838164732,"results":"20","hashOfConfig":"16"},{"size":250,"mtime":1609399356181,"results":"21","hashOfConfig":"16"},{"size":618,"mtime":1609727613943,"results":"22","hashOfConfig":"16"},{"size":2297,"mtime":1609640017667,"results":"23","hashOfConfig":"16"},{"size":67356,"mtime":1614838900422,"results":"24","hashOfConfig":"16"},{"size":318,"mtime":1614624371721,"results":"25","hashOfConfig":"16"},{"size":9617,"mtime":1614838783435,"results":"26","hashOfConfig":"16"},{"size":168,"mtime":1609649471112,"results":"27","hashOfConfig":"16"},{"size":127,"mtime":1609727545614,"results":"28","hashOfConfig":"16"},{"size":2906,"mtime":1614741851909,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"130szos",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Apparel\\Apparel.js",["62","63","64","65","66","67"],"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\index.js",[],"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Home\\Home.js",[],"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Nav\\Dropdown.js",[],"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Nav\\Nav.js",[],"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\index.js",[],["68","69"],"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\App.js",["70"],"import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport {Home, Apparel, ProductPage} from './components';\r\nimport * as Routes from './Constants/Routes';\r\nimport { commerce } from './lib/commerce';\r\nconst App = () => {\r\n    return(\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path={Routes.HOME} component={Home} />\r\n                <Route path={Routes.COLLECTION} component={Apparel}/>\r\n                <Route path='/collections/anime-clothing-apparel/products/:id' component={ProductPage}/>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;",["71","72"],"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\seed.js",[],"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Products\\Card.js",[],"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Products\\ProductPage.js",["73","74","75","76","77"],"import {useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {apparel, homegoods, techAccessories} from '../../seed';\r\nimport {Nav, Footer, Card} from '../index';\r\nimport {Link} from 'react-router-dom';\r\nimport {Modal, Radio, Table} from 'antd';\r\nimport {HeartOutlined} from '@ant-design/icons';\r\nimport {columns, tShirtData, longTShirtData, sweatshirtData} from './ModalData';\r\nimport ScrollTo from 'react-scroll-into-view';\r\nimport './ProductPage.css';\r\nimport '../Nav/Nav.css';\r\n\r\nconst intialState = {dayName:null, month: null, dayNumber: null};\r\n\r\nvar combineProduct = apparel.concat(homegoods);\r\nvar combineProduct = combineProduct.concat(techAccessories)\r\n\r\nconst ProductPage = () => {\r\n    const {id} = useParams();\r\n    const [size, setSize] = useState();\r\n    const [visible, setVisible] = useState(false);\r\n    const [standardShipping, setStandardShipping] = useState(intialState);\r\n    const [overnightShipping, setOvernightShipping] = useState(intialState);\r\n\r\n    const filteredProduct = apparel.find(item => {\r\n        return item.id == id\r\n        })\r\n    \r\n\r\n    const handleChange = value => {\r\n        setSize(value.target.value)\r\n    }\r\n\r\n    const today = new Date()\r\n    var standard = new Date(today)\r\n    standard.setDate(standard.getDate() + 5)\r\n    \r\n    var overnight = new Date(today)\r\n    overnight.setDate(overnight.getDate() + 1)\r\n\r\n    var standardDay = standard.getDay();\r\n    var overnightDay = overnight.getDay();\r\n\r\n    const dayOfTheWeek = (value) => {\r\n        if(value === 0){\r\n            return 'Sun'\r\n        } else if (value === 1){\r\n            return 'Mon'\r\n        } else if(value === 2){\r\n            return 'Tues'\r\n        } else if(value === 3){\r\n            return 'Wed'\r\n        } else if(value === 4){\r\n            return 'Thur'\r\n        } else if(value === 5){\r\n            return 'Fri'\r\n        } else if(value === 6){\r\n            return 'Sat'\r\n        }\r\n    } \r\n    let monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n    let standardMonth = monthNames[standard.getMonth()];\r\n    let overnightMonth = monthNames[overnight.getMonth()];\r\n    let standardDate = standard.getDate();\r\n    \r\n    useEffect(() => {\r\n        setStandardShipping({dayName: dayOfTheWeek(standardDay), month: standardMonth, dayNumber: standardDate})\r\n    }, [standardDay, standardMonth])\r\n\r\n    useEffect(() => {\r\n        setOvernightShipping({dayName: dayOfTheWeek(overnightDay), month: overnightMonth, dayNumber: overnight.getDate()})\r\n    }, [overnightDay, overnightMonth])\r\n\r\n   // Shuffle array\r\n    const shuffled = combineProduct.sort(() => 0.5 - Math.random());\r\n\r\n    // Get sub-array of first 6 elements after shuffled\r\n    let selected = shuffled.slice(0, 6);\r\n    \r\n    const randomApparel = apparel.sort(() => 0.5 - Math.random()).slice(0,4);\r\n\r\n    return(\r\n        <>\r\n        <Nav />\r\n        <div className='product_container'>  \r\n            <img src={filteredProduct.photo} className='product_image'/>\r\n            <div className='right'>\r\n                <div className='top_right'>\r\n                    <p>{filteredProduct.name}</p>\r\n                    <p>${filteredProduct.price} USD</p>\r\n                    <p className='fourPayments'> \r\n                       <quadpay-widget className='quadpay' logoColor=\"#1d75ec\"/>\r\n                    </p>\r\n                    <div className='size_container'>\r\n                        <p className='size'>Size: {size} </p>\r\n                        <div className='size_container_right'>\r\n                            <img src={process.env.PUBLIC_URL + '/assets/icons/ruler.svg'} alt='ruler'/>\r\n                            <button onClick={() => setVisible(true)}>\r\n                                Size Chart\r\n                            </button>\r\n                            <Modal\r\n                                className='modal'\r\n                                footer={null}\r\n                                centered\r\n                                visible={visible}\r\n                                onCancel={() => setVisible(false)}\r\n                                width={1000}\r\n                                \r\n                            >\r\n                                <div className='modal_tables' style={{ height: '500'}}>\r\n                                <div className='modal_table'>\r\n                                    <h2 className='modal_header'> Adult Tee Size Chart </h2>\r\n                                    <Table columns={columns} dataSource={tShirtData} bordered pagination={false}/>\r\n                                </div>\r\n                                <div className='modal_table'>\r\n                                    <h2 className='modal_header'> Adult Long-Sleeve Tee Size Chart </h2>\r\n                                    <Table columns={columns} dataSource={longTShirtData} bordered pagination={false}/>\r\n                                </div>\r\n                                <div className='modal_table'>\r\n                                    <h2 className='modal_header'> Adult Hooded Sweatshirt Size Chart </h2>\r\n                                    <Table columns={columns} dataSource={sweatshirtData} bordered pagination={false}/>\r\n                                </div>\r\n                                </div>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <Radio.Group className='radio_button' buttonStyle=\"solid\" onChange={handleChange}>\r\n                        <Radio.Button value=\"XS\">XS</Radio.Button>\r\n                        <Radio.Button value=\"S\">S</Radio.Button>\r\n                        <Radio.Button value=\"M\">M</Radio.Button>\r\n                        <Radio.Button value=\"L\">L</Radio.Button>\r\n                        <Radio.Button value=\"XL\">XL</Radio.Button>\r\n                        <Radio.Button value=\"1X\">1X</Radio.Button>\r\n                        <Radio.Button value=\"2X\">2X</Radio.Button>\r\n                        <Radio.Button value=\"3X\">3X</Radio.Button>\r\n                    </Radio.Group>\r\n                </div>\r\n                <div className='cart_container'>\r\n                    <Link to='/' className='cart_button'>ADD TO CART</Link>\r\n                    <button className='heart_button'>\r\n                        <HeartOutlined className='heart'/>\r\n                    </button>\r\n                </div>\r\n                <div className='shipping'>\r\n                    <p>\r\n                        <img src={process.env.PUBLIC_URL + '/assets/icons/travelling.svg'} alt='traveling'/>\r\n                        Get it by {standardShipping.dayName}, {standardShipping.month} {standardShipping.dayNumber} with standard shipping\r\n                    </p>\r\n                    <p>\r\n                        <img src={process.env.PUBLIC_URL + '/assets/icons/rocket.svg'} alt='rocket'/>\r\n                        Get it by {overnightShipping.dayName}, {overnightShipping.month} {overnightShipping.dayNumber} with overnight shipping\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div className='random_product'>\r\n            <div className='title'> You may also like</div>\r\n            <p>Customers who brought this item also brought</p>\r\n\r\n            <div className='container'>\r\n                    {selected.map(item => {\r\n                        const productUrl = item => {\r\n                            if (item.category === 'apparel'){\r\n                            return 'anime-clothing-apparel'\r\n                            } else if (item.category === 'homegoods'){\r\n                                return 'anime-homegoods'\r\n                            } else if (item.category === 'techAccessories'){\r\n                                return 'anime-tech-accessories'\r\n                            }\r\n                        }\r\n                        return(\r\n                        \r\n                            <Link to={`/collections/${productUrl(item)}/products/${item.id}`} className='link overlay'key={item.id}>\r\n                                <ScrollTo selector={`#product`}><Card className='product_card' item={item} key={item.id}/></ScrollTo>\r\n                            </Link>\r\n                    )})}\r\n            </div> \r\n        </div>\r\n        \r\n        <div className='similar_products'>\r\n            <div className='title'> Similar Products</div>\r\n            <p>Customers who viewed this item also viewed</p>\r\n            \r\n            <div className='container'>\r\n                    {randomApparel.map(item => {\r\n                        const productUrl = item => {\r\n                            if (item.category === 'apparel'){\r\n                            return 'anime-clothing-apparel'\r\n                            } else if (item.category === 'homegoods'){\r\n                                return 'anime-homegoods'\r\n                            } else if (item.category === 'techAccessories'){\r\n                                return 'anime-tech-accessories'\r\n                            }\r\n                        }\r\n                        return(\r\n                        <Link to={`/collections/${productUrl(item)}/products/${item.id}`} className='link overlay'key={item.id}>\r\n                            <ScrollTo selector={`#product`}><Card className='product_card' item={item} key={item.id}/></ScrollTo>\r\n                        </Link>\r\n                    )})}\r\n            </div>\r\n        </div>\r\n        <Footer/> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductPage;","C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\Constants\\Routes.js",[],"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\lib\\commerce.js",[],"C:\\Users\\Miley\\Documents\\Github\\atsuko\\src\\components\\Products\\ModalData.js",[],{"ruleId":"78","severity":1,"message":"79","line":1,"column":20,"nodeType":"80","messageId":"81","endLine":1,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":30,"column":46,"nodeType":"84","messageId":"85","endLine":30,"endColumn":48},{"ruleId":"82","severity":1,"message":"83","line":42,"column":46,"nodeType":"84","messageId":"85","endLine":42,"endColumn":48},{"ruleId":"82","severity":1,"message":"83","line":55,"column":46,"nodeType":"84","messageId":"85","endLine":55,"endColumn":48},{"ruleId":"82","severity":1,"message":"83","line":68,"column":46,"nodeType":"84","messageId":"85","endLine":68,"endColumn":48},{"ruleId":"82","severity":1,"message":"83","line":80,"column":46,"nodeType":"84","messageId":"85","endLine":80,"endColumn":48},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"78","severity":1,"message":"90","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":18},{"ruleId":"86","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":16,"column":5,"nodeType":"80","messageId":"95","endLine":16,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":26,"column":24,"nodeType":"98","messageId":"99","endLine":26,"endColumn":26},{"ruleId":"100","severity":1,"message":"101","line":69,"column":8,"nodeType":"102","endLine":69,"endColumn":36,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":73,"column":8,"nodeType":"102","endLine":73,"endColumn":38,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":87,"column":13,"nodeType":"108","endLine":87,"endColumn":73},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"'commerce' is defined but never used.",["109"],["110"],"no-redeclare","'combineProduct' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'standardDate'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has a missing dependency: 'overnight'. Either include it or remove the dependency array.",["112"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [standardDate, standardDay, standardMonth]",{"range":"117","text":"118"},"Update the dependencies array to be: [overnight, overnightDay, overnightMonth]",{"range":"119","text":"120"},[2379,2407],"[standardDate, standardDay, standardMonth]",[2566,2596],"[overnight, overnightDay, overnightMonth]"]